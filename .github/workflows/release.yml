name: ola_node Release
on:
  push:
    tags:
      - '*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:

  linux-x86-64:
    name: Linux x86-64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2024-01-19
        override: true
        components: rustfmt, clippy
    - name: Build
      run: SQLX_OFFLINE=true cargo build --release
    - name: Upload Ola node binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/ola_node
        asset_name: ola_node-linux-x86-64
        tag: ${{ github.ref }}
    - name: Upload olatte binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/olatte
        asset_name: olatte-linux-x86-64
        tag: ${{ github.ref }}      
  mac-intel:
    name: Mac Intel
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2024-01-19
        override: true
        components: rustfmt, clippy
    - name: Install Rust
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rustfmt
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: 15      
    - name: Build
      run: SQLX_OFFLINE=true cargo build --release
    - name: Upload Ola node binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/ola_node
        asset_name: ola_node-mac-intel
        tag: ${{ github.ref }} 
    - name: Upload olatte binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/olatte
        asset_name: olatte-mac-intel
        tag: ${{ github.ref }}          
  macos-arm:
    name: Mac ARM
    runs-on: macos-latest-xlarge
    steps:
    - uses: actions/checkout@v3
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2024-01-19
        override: true
        components: rustfmt, clippy
    - name: Get LLVM
      run: curl -sSL --output clang+llvm-15.0.7-arm64-apple-darwin22.0.tar.xz https://github.com/llvm/llvm-project/releases/download/llvmorg-15.0.7/clang+llvm-15.0.7-arm64-apple-darwin22.0.tar.xz
    - name: Extract LLVM
      run: tar Jxf clang+llvm-15.0.7-arm64-apple-darwin22.0.tar.xz && mv clang+llvm-15.0.7-arm64-apple-darwin22.0 llvm15.0
    - name: Add LLVM to Path
      run: echo "$(pwd)/llvm15.0/bin" >> $GITHUB_PATH 
    - name: Build
      run: SQLX_OFFLINE=true cargo build --release
    - name: Upload Ola node binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/ola_node
        asset_name: ola_node-mac-arm
        tag: ${{ github.ref }}
    - name: Upload olatte binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/olatte
        asset_name: olatte-mac-arm
        tag: ${{ github.ref }}     
  windows:
    name: Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2024-01-19
        override: true
        components: rustfmt, clippy
    - name: Download LLVM
      run: curl -sSL -o c:\llvm.zip https://github.com/hyperledger/solang-llvm/releases/download/llvm15-1/llvm15.0-win.zip
    - name: Extract LLVM
      run: unzip c:\llvm.zip -d c:/
    - name: Add LLVM to Path
      run: echo "c:\llvm15.0\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8
    - name: Build
      env:
        SQLX_OFFLINE: true
      run: cargo build --release
    - name: Upload Ola node binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/ola_node.exe
        asset_name: ola_node-windows.exe
        tag: ${{ github.ref }} 
    - name: Upload olatte binary
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/olatte.exe
        asset_name: olatte-windows.exe
        tag: ${{ github.ref }}   
